//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the sim package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __sim__SIMCONFIG_H__
#define __sim__SIMCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace sim
{
  class simConfigStatics;

  class simConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(simConfig &config, const simConfig &max, const simConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const simConfig &config1, const simConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, simConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const simConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, simConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const simConfig &config) const = 0;
      virtual void getValue(const simConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T simConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (simConfig::* field);

      virtual void clamp(simConfig &config, const simConfig &max, const simConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const simConfig &config1, const simConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, simConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const simConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, simConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const simConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const simConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, simConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, simConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<simConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(simConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("publish"==(*_i)->name){publish = boost::any_cast<bool>(val);}
        if("per_switch"==(*_i)->name){per_switch = boost::any_cast<bool>(val);}
        if("per_time"==(*_i)->name){per_time = boost::any_cast<double>(val);}
        if("per_person_IDtype"==(*_i)->name){per_person_IDtype = boost::any_cast<std::string>(val);}
        if("per_person_name"==(*_i)->name){per_person_name = boost::any_cast<std::string>(val);}
        if("per_intention"==(*_i)->name){per_intention = boost::any_cast<std::string>(val);}
        if("per_p"==(*_i)->name){per_p = boost::any_cast<double>(val);}
        if("per_speech"==(*_i)->name){per_speech = boost::any_cast<std::string>(val);}
        if("per_emotion"==(*_i)->name){per_emotion = boost::any_cast<std::string>(val);}
        if("emotion_switch"==(*_i)->name){emotion_switch = boost::any_cast<bool>(val);}
        if("emotion_1_happy"==(*_i)->name){emotion_1_happy = boost::any_cast<double>(val);}
        if("emotion_2_angry"==(*_i)->name){emotion_2_angry = boost::any_cast<double>(val);}
        if("emotion_3_sad"==(*_i)->name){emotion_3_sad = boost::any_cast<double>(val);}
        if("emotion_4_boring"==(*_i)->name){emotion_4_boring = boost::any_cast<double>(val);}
        if("emotion_5_"==(*_i)->name){emotion_5_ = boost::any_cast<double>(val);}
        if("emotion_6_"==(*_i)->name){emotion_6_ = boost::any_cast<double>(val);}
        if("emotion_7_"==(*_i)->name){emotion_7_ = boost::any_cast<double>(val);}
        if("emotion_8_"==(*_i)->name){emotion_8_ = boost::any_cast<double>(val);}
        if("body_switch"==(*_i)->name){body_switch = boost::any_cast<bool>(val);}
        if("body_1_energy"==(*_i)->name){body_1_energy = boost::any_cast<double>(val);}
        if("body_2_gaze"==(*_i)->name){body_2_gaze = boost::any_cast<double>(val);}
        if("body_3_expression"==(*_i)->name){body_3_expression = boost::any_cast<double>(val);}
        if("body_4_body"==(*_i)->name){body_4_body = boost::any_cast<double>(val);}
        if("body_5_arm"==(*_i)->name){body_5_arm = boost::any_cast<double>(val);}
        if("body_6_leg"==(*_i)->name){body_6_leg = boost::any_cast<double>(val);}
        if("body_7_blank"==(*_i)->name){body_7_blank = boost::any_cast<double>(val);}
        if("body_idleState"==(*_i)->name){body_idleState = boost::any_cast<bool>(val);}
        if("need_switch"==(*_i)->name){need_switch = boost::any_cast<bool>(val);}
        if("need_person_name"==(*_i)->name){need_person_name = boost::any_cast<std::string>(val);}
        if("need_person_IDtype"==(*_i)->name){need_person_IDtype = boost::any_cast<std::string>(val);}
        if("need_rob_emotion"==(*_i)->name){need_rob_emotion = boost::any_cast<std::string>(val);}
        if("need_person_emotion"==(*_i)->name){need_person_emotion = boost::any_cast<std::string>(val);}
        if("need_name"==(*_i)->name){need_name = boost::any_cast<std::string>(val);}
        if("need_weight"==(*_i)->name){need_weight = boost::any_cast<double>(val);}
        if("need_speech"==(*_i)->name){need_speech = boost::any_cast<std::string>(val);}
      }
    }

    bool publish;
bool per_switch;
double per_time;
std::string per_person_IDtype;
std::string per_person_name;
std::string per_intention;
double per_p;
std::string per_speech;
std::string per_emotion;
bool emotion_switch;
double emotion_1_happy;
double emotion_2_angry;
double emotion_3_sad;
double emotion_4_boring;
double emotion_5_;
double emotion_6_;
double emotion_7_;
double emotion_8_;
bool body_switch;
double body_1_energy;
double body_2_gaze;
double body_3_expression;
double body_4_body;
double body_5_arm;
double body_6_leg;
double body_7_blank;
bool body_idleState;
bool need_switch;
std::string need_person_name;
std::string need_person_IDtype;
std::string need_rob_emotion;
std::string need_person_emotion;
std::string need_name;
double need_weight;
std::string need_speech;

    bool state;
    std::string name;

    
}groups;



//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool publish;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool per_switch;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double per_time;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string per_person_IDtype;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string per_person_name;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string per_intention;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double per_p;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string per_speech;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string per_emotion;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool emotion_switch;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double emotion_1_happy;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double emotion_2_angry;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double emotion_3_sad;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double emotion_4_boring;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double emotion_5_;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double emotion_6_;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double emotion_7_;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double emotion_8_;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool body_switch;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double body_1_energy;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double body_2_gaze;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double body_3_expression;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double body_4_body;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double body_5_arm;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double body_6_leg;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double body_7_blank;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool body_idleState;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool need_switch;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string need_person_name;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string need_person_IDtype;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string need_rob_emotion;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string need_person_emotion;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string need_name;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double need_weight;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string need_speech;
//#line 228 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("simConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const simConfig &__max__ = __getMax__();
      const simConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const simConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const simConfig &__getDefault__();
    static const simConfig &__getMax__();
    static const simConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const simConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void simConfig::ParamDescription<std::string>::clamp(simConfig &config, const simConfig &max, const simConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class simConfigStatics
  {
    friend class simConfig;

    simConfigStatics()
    {
simConfig::GroupDescription<simConfig::DEFAULT, simConfig> Default("Default", "", 0, 0, true, &simConfig::groups);
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.publish = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.publish = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.publish = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("publish", "bool", 0, "switch", "", &simConfig::publish)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("publish", "bool", 0, "switch", "", &simConfig::publish)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.per_switch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.per_switch = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.per_switch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("per_switch", "bool", 0, "switch", "", &simConfig::per_switch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("per_switch", "bool", 0, "switch", "", &simConfig::per_switch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.per_time = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.per_time = 1e+12;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.per_time = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("per_time", "double", 0, "per_time", "", &simConfig::per_time)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("per_time", "double", 0, "per_time", "", &simConfig::per_time)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.per_person_IDtype = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.per_person_IDtype = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.per_person_IDtype = "Teacher";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_person_IDtype", "str", 0, "per_person_IDtype", "{'enum_description': 'An enum to set person ID', 'enum': [{'srcline': 27, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Teacher', 'ctype': 'std::string', 'type': 'str', 'name': 'Teacher'}, {'srcline': 28, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Student', 'ctype': 'std::string', 'type': 'str', 'name': 'Student'}, {'srcline': 29, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Parent', 'ctype': 'std::string', 'type': 'str', 'name': 'Parent'}]}", &simConfig::per_person_IDtype)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_person_IDtype", "str", 0, "per_person_IDtype", "{'enum_description': 'An enum to set person ID', 'enum': [{'srcline': 27, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Teacher', 'ctype': 'std::string', 'type': 'str', 'name': 'Teacher'}, {'srcline': 28, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Student', 'ctype': 'std::string', 'type': 'str', 'name': 'Student'}, {'srcline': 29, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Parent', 'ctype': 'std::string', 'type': 'str', 'name': 'Parent'}]}", &simConfig::per_person_IDtype)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.per_person_name = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.per_person_name = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.per_person_name = "Teacher Li";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_person_name", "str", 0, "per_person_name", "{'enum_description': 'An enum to set person_name', 'enum': [{'srcline': 33, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Teacher_Li', 'ctype': 'std::string', 'type': 'str', 'name': 'Teacher_Li'}, {'srcline': 34, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Hong', 'ctype': 'std::string', 'type': 'str', 'name': 'Hong'}, {'srcline': 35, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Ming', 'ctype': 'std::string', 'type': 'str', 'name': 'Ming'}, {'srcline': 36, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Gang', 'ctype': 'std::string', 'type': 'str', 'name': 'Gang'}, {'srcline': 37, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Hong', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Hong'}, {'srcline': 38, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Ming', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Ming'}, {'srcline': 39, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Gang', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Gang'}, {'srcline': 40, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Headmaster', 'ctype': 'std::string', 'type': 'str', 'name': 'Headmaster'}]}", &simConfig::per_person_name)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_person_name", "str", 0, "per_person_name", "{'enum_description': 'An enum to set person_name', 'enum': [{'srcline': 33, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Teacher_Li', 'ctype': 'std::string', 'type': 'str', 'name': 'Teacher_Li'}, {'srcline': 34, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Hong', 'ctype': 'std::string', 'type': 'str', 'name': 'Hong'}, {'srcline': 35, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Ming', 'ctype': 'std::string', 'type': 'str', 'name': 'Ming'}, {'srcline': 36, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Gang', 'ctype': 'std::string', 'type': 'str', 'name': 'Gang'}, {'srcline': 37, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Hong', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Hong'}, {'srcline': 38, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Ming', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Ming'}, {'srcline': 39, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Gang', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Gang'}, {'srcline': 40, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Headmaster', 'ctype': 'std::string', 'type': 'str', 'name': 'Headmaster'}]}", &simConfig::per_person_name)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.per_intention = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.per_intention = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.per_intention = "EnterSchool";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_intention", "str", 0, "per_intention", "{'enum_description': 'An enum to set intention', 'enum': [{'srcline': 19, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'EnterSchool', 'ctype': 'std::string', 'type': 'str', 'name': 'EnterSchool'}, {'srcline': 20, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Query', 'ctype': 'std::string', 'type': 'str', 'name': 'Query'}]}", &simConfig::per_intention)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_intention", "str", 0, "per_intention", "{'enum_description': 'An enum to set intention', 'enum': [{'srcline': 19, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'EnterSchool', 'ctype': 'std::string', 'type': 'str', 'name': 'EnterSchool'}, {'srcline': 20, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Query', 'ctype': 'std::string', 'type': 'str', 'name': 'Query'}]}", &simConfig::per_intention)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.per_p = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.per_p = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.per_p = 0.9;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("per_p", "double", 0, "per_p", "", &simConfig::per_p)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("per_p", "double", 0, "per_p", "", &simConfig::per_p)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.per_speech = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.per_speech = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.per_speech = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_speech", "str", 0, "per_speech", "", &simConfig::per_speech)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_speech", "str", 0, "per_speech", "", &simConfig::per_speech)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.per_emotion = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.per_emotion = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.per_emotion = "Happy";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_emotion", "str", 0, "per_emotion", "{'enum_description': 'An enum to set emotion', 'enum': [{'srcline': 22, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Happy', 'ctype': 'std::string', 'type': 'str', 'name': 'Happy'}, {'srcline': 23, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Sad', 'ctype': 'std::string', 'type': 'str', 'name': 'Sad'}, {'srcline': 24, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Angry', 'ctype': 'std::string', 'type': 'str', 'name': 'Angry'}, {'srcline': 25, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Boring', 'ctype': 'std::string', 'type': 'str', 'name': 'Boring'}]}", &simConfig::per_emotion)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("per_emotion", "str", 0, "per_emotion", "{'enum_description': 'An enum to set emotion', 'enum': [{'srcline': 22, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Happy', 'ctype': 'std::string', 'type': 'str', 'name': 'Happy'}, {'srcline': 23, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Sad', 'ctype': 'std::string', 'type': 'str', 'name': 'Sad'}, {'srcline': 24, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Angry', 'ctype': 'std::string', 'type': 'str', 'name': 'Angry'}, {'srcline': 25, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Boring', 'ctype': 'std::string', 'type': 'str', 'name': 'Boring'}]}", &simConfig::per_emotion)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.emotion_switch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.emotion_switch = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.emotion_switch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("emotion_switch", "bool", 0, "switch", "", &simConfig::emotion_switch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("emotion_switch", "bool", 0, "switch", "", &simConfig::emotion_switch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.emotion_1_happy = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.emotion_1_happy = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.emotion_1_happy = 0.8;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_1_happy", "double", 0, "happy", "", &simConfig::emotion_1_happy)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_1_happy", "double", 0, "happy", "", &simConfig::emotion_1_happy)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.emotion_2_angry = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.emotion_2_angry = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.emotion_2_angry = 0.8;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_2_angry", "double", 0, "angry", "", &simConfig::emotion_2_angry)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_2_angry", "double", 0, "angry", "", &simConfig::emotion_2_angry)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.emotion_3_sad = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.emotion_3_sad = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.emotion_3_sad = 0.8;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_3_sad", "double", 0, "sad", "", &simConfig::emotion_3_sad)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_3_sad", "double", 0, "sad", "", &simConfig::emotion_3_sad)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.emotion_4_boring = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.emotion_4_boring = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.emotion_4_boring = 0.8;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_4_boring", "double", 0, "boring", "", &simConfig::emotion_4_boring)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_4_boring", "double", 0, "boring", "", &simConfig::emotion_4_boring)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.emotion_5_ = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.emotion_5_ = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.emotion_5_ = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_5_", "double", 0, "", "", &simConfig::emotion_5_)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_5_", "double", 0, "", "", &simConfig::emotion_5_)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.emotion_6_ = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.emotion_6_ = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.emotion_6_ = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_6_", "double", 0, "", "", &simConfig::emotion_6_)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_6_", "double", 0, "", "", &simConfig::emotion_6_)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.emotion_7_ = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.emotion_7_ = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.emotion_7_ = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_7_", "double", 0, "", "", &simConfig::emotion_7_)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_7_", "double", 0, "", "", &simConfig::emotion_7_)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.emotion_8_ = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.emotion_8_ = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.emotion_8_ = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_8_", "double", 0, "", "", &simConfig::emotion_8_)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("emotion_8_", "double", 0, "", "", &simConfig::emotion_8_)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.body_switch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.body_switch = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.body_switch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("body_switch", "bool", 0, "switch", "", &simConfig::body_switch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("body_switch", "bool", 0, "switch", "", &simConfig::body_switch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.body_1_energy = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.body_1_energy = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.body_1_energy = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_1_energy", "double", 0, "energy", "", &simConfig::body_1_energy)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_1_energy", "double", 0, "energy", "", &simConfig::body_1_energy)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.body_2_gaze = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.body_2_gaze = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.body_2_gaze = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_2_gaze", "double", 0, "gaze", "", &simConfig::body_2_gaze)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_2_gaze", "double", 0, "gaze", "", &simConfig::body_2_gaze)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.body_3_expression = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.body_3_expression = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.body_3_expression = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_3_expression", "double", 0, "expression", "", &simConfig::body_3_expression)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_3_expression", "double", 0, "expression", "", &simConfig::body_3_expression)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.body_4_body = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.body_4_body = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.body_4_body = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_4_body", "double", 0, "body", "", &simConfig::body_4_body)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_4_body", "double", 0, "body", "", &simConfig::body_4_body)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.body_5_arm = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.body_5_arm = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.body_5_arm = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_5_arm", "double", 0, "arm", "", &simConfig::body_5_arm)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_5_arm", "double", 0, "arm", "", &simConfig::body_5_arm)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.body_6_leg = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.body_6_leg = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.body_6_leg = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_6_leg", "double", 0, "leg", "", &simConfig::body_6_leg)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_6_leg", "double", 0, "leg", "", &simConfig::body_6_leg)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.body_7_blank = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.body_7_blank = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.body_7_blank = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_7_blank", "double", 0, "blank", "", &simConfig::body_7_blank)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("body_7_blank", "double", 0, "blank", "", &simConfig::body_7_blank)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.body_idleState = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.body_idleState = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.body_idleState = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("body_idleState", "bool", 0, "bool parameter", "", &simConfig::body_idleState)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("body_idleState", "bool", 0, "bool parameter", "", &simConfig::body_idleState)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.need_switch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.need_switch = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.need_switch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("need_switch", "bool", 0, "switch", "", &simConfig::need_switch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<bool>("need_switch", "bool", 0, "switch", "", &simConfig::need_switch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.need_person_name = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.need_person_name = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.need_person_name = "Teacher_Li";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_person_name", "str", 0, "need_person", "{'enum_description': 'An enum to set person_name', 'enum': [{'srcline': 33, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Teacher_Li', 'ctype': 'std::string', 'type': 'str', 'name': 'Teacher_Li'}, {'srcline': 34, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Hong', 'ctype': 'std::string', 'type': 'str', 'name': 'Hong'}, {'srcline': 35, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Ming', 'ctype': 'std::string', 'type': 'str', 'name': 'Ming'}, {'srcline': 36, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Gang', 'ctype': 'std::string', 'type': 'str', 'name': 'Gang'}, {'srcline': 37, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Hong', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Hong'}, {'srcline': 38, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Ming', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Ming'}, {'srcline': 39, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Gang', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Gang'}, {'srcline': 40, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Headmaster', 'ctype': 'std::string', 'type': 'str', 'name': 'Headmaster'}]}", &simConfig::need_person_name)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_person_name", "str", 0, "need_person", "{'enum_description': 'An enum to set person_name', 'enum': [{'srcline': 33, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Teacher_Li', 'ctype': 'std::string', 'type': 'str', 'name': 'Teacher_Li'}, {'srcline': 34, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Hong', 'ctype': 'std::string', 'type': 'str', 'name': 'Hong'}, {'srcline': 35, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Ming', 'ctype': 'std::string', 'type': 'str', 'name': 'Ming'}, {'srcline': 36, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Gang', 'ctype': 'std::string', 'type': 'str', 'name': 'Gang'}, {'srcline': 37, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Hong', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Hong'}, {'srcline': 38, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Ming', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Ming'}, {'srcline': 39, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Dad_of_Gang', 'ctype': 'std::string', 'type': 'str', 'name': 'Dad_of_Gang'}, {'srcline': 40, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Headmaster', 'ctype': 'std::string', 'type': 'str', 'name': 'Headmaster'}]}", &simConfig::need_person_name)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.need_person_IDtype = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.need_person_IDtype = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.need_person_IDtype = "Teacher";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_person_IDtype", "str", 0, "need_person", "{'enum_description': 'An enum to set person ID', 'enum': [{'srcline': 27, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Teacher', 'ctype': 'std::string', 'type': 'str', 'name': 'Teacher'}, {'srcline': 28, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Student', 'ctype': 'std::string', 'type': 'str', 'name': 'Student'}, {'srcline': 29, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Parent', 'ctype': 'std::string', 'type': 'str', 'name': 'Parent'}]}", &simConfig::need_person_IDtype)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_person_IDtype", "str", 0, "need_person", "{'enum_description': 'An enum to set person ID', 'enum': [{'srcline': 27, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Teacher', 'ctype': 'std::string', 'type': 'str', 'name': 'Teacher'}, {'srcline': 28, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Student', 'ctype': 'std::string', 'type': 'str', 'name': 'Student'}, {'srcline': 29, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Parent', 'ctype': 'std::string', 'type': 'str', 'name': 'Parent'}]}", &simConfig::need_person_IDtype)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.need_rob_emotion = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.need_rob_emotion = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.need_rob_emotion = "Happy";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_rob_emotion", "str", 0, "need_rob_emotion", "{'enum_description': 'An enum to set emotion', 'enum': [{'srcline': 22, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Happy', 'ctype': 'std::string', 'type': 'str', 'name': 'Happy'}, {'srcline': 23, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Sad', 'ctype': 'std::string', 'type': 'str', 'name': 'Sad'}, {'srcline': 24, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Angry', 'ctype': 'std::string', 'type': 'str', 'name': 'Angry'}, {'srcline': 25, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Boring', 'ctype': 'std::string', 'type': 'str', 'name': 'Boring'}]}", &simConfig::need_rob_emotion)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_rob_emotion", "str", 0, "need_rob_emotion", "{'enum_description': 'An enum to set emotion', 'enum': [{'srcline': 22, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Happy', 'ctype': 'std::string', 'type': 'str', 'name': 'Happy'}, {'srcline': 23, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Sad', 'ctype': 'std::string', 'type': 'str', 'name': 'Sad'}, {'srcline': 24, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Angry', 'ctype': 'std::string', 'type': 'str', 'name': 'Angry'}, {'srcline': 25, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Boring', 'ctype': 'std::string', 'type': 'str', 'name': 'Boring'}]}", &simConfig::need_rob_emotion)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.need_person_emotion = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.need_person_emotion = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.need_person_emotion = "Happy";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_person_emotion", "str", 0, "need_person_emotion", "{'enum_description': 'An enum to set emotion', 'enum': [{'srcline': 22, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Happy', 'ctype': 'std::string', 'type': 'str', 'name': 'Happy'}, {'srcline': 23, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Sad', 'ctype': 'std::string', 'type': 'str', 'name': 'Sad'}, {'srcline': 24, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Angry', 'ctype': 'std::string', 'type': 'str', 'name': 'Angry'}, {'srcline': 25, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Boring', 'ctype': 'std::string', 'type': 'str', 'name': 'Boring'}]}", &simConfig::need_person_emotion)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_person_emotion", "str", 0, "need_person_emotion", "{'enum_description': 'An enum to set emotion', 'enum': [{'srcline': 22, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Happy', 'ctype': 'std::string', 'type': 'str', 'name': 'Happy'}, {'srcline': 23, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Sad', 'ctype': 'std::string', 'type': 'str', 'name': 'Sad'}, {'srcline': 24, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Angry', 'ctype': 'std::string', 'type': 'str', 'name': 'Angry'}, {'srcline': 25, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Boring', 'ctype': 'std::string', 'type': 'str', 'name': 'Boring'}]}", &simConfig::need_person_emotion)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.need_name = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.need_name = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.need_name = "Greet";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_name", "str", 0, "need_name", "{'enum_description': 'An enum to set need', 'enum': [{'srcline': 43, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Greet', 'ctype': 'std::string', 'type': 'str', 'name': 'Greet'}, {'srcline': 44, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'MeasureTempareture', 'ctype': 'std::string', 'type': 'str', 'name': 'MeasureTempareture'}, {'srcline': 45, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Answer', 'ctype': 'std::string', 'type': 'str', 'name': 'Answer'}, {'srcline': 46, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'ParentIdentity', 'ctype': 'std::string', 'type': 'str', 'name': 'ParentIdentity'}, {'srcline': 47, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Wander', 'ctype': 'std::string', 'type': 'str', 'name': 'Wander'}, {'srcline': 48, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Doubt', 'ctype': 'std::string', 'type': 'str', 'name': 'Doubt '}, {'srcline': 49, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Chat', 'ctype': 'std::string', 'type': 'str', 'name': 'Chat'}, {'srcline': 50, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Charge', 'ctype': 'std::string', 'type': 'str', 'name': 'Charge'}]}", &simConfig::need_name)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_name", "str", 0, "need_name", "{'enum_description': 'An enum to set need', 'enum': [{'srcline': 43, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Greet', 'ctype': 'std::string', 'type': 'str', 'name': 'Greet'}, {'srcline': 44, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'MeasureTempareture', 'ctype': 'std::string', 'type': 'str', 'name': 'MeasureTempareture'}, {'srcline': 45, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Answer', 'ctype': 'std::string', 'type': 'str', 'name': 'Answer'}, {'srcline': 46, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'ParentIdentity', 'ctype': 'std::string', 'type': 'str', 'name': 'ParentIdentity'}, {'srcline': 47, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Wander', 'ctype': 'std::string', 'type': 'str', 'name': 'Wander'}, {'srcline': 48, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Doubt', 'ctype': 'std::string', 'type': 'str', 'name': 'Doubt '}, {'srcline': 49, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Chat', 'ctype': 'std::string', 'type': 'str', 'name': 'Chat'}, {'srcline': 50, 'description': '', 'srcfile': '/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg', 'cconsttype': 'const char * const', 'value': 'Charge', 'ctype': 'std::string', 'type': 'str', 'name': 'Charge'}]}", &simConfig::need_name)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.need_weight = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.need_weight = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.need_weight = 0.9;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("need_weight", "double", 0, "need_weight", "", &simConfig::need_weight)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<double>("need_weight", "double", 0, "need_weight", "", &simConfig::need_weight)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.need_speech = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.need_speech = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.need_speech = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_speech", "str", 0, "need_speech", "", &simConfig::need_speech)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(simConfig::AbstractParamDescriptionConstPtr(new simConfig::ParamDescription<std::string>("need_speech", "str", 0, "need_speech", "", &simConfig::need_speech)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(simConfig::AbstractGroupDescriptionConstPtr(new simConfig::GroupDescription<simConfig::DEFAULT, simConfig>(Default)));
//#line 366 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<simConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<simConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<simConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    simConfig __max__;
    simConfig __min__;
    simConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const simConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static simConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &simConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const simConfig &simConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const simConfig &simConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const simConfig &simConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<simConfig::AbstractParamDescriptionConstPtr> &simConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<simConfig::AbstractGroupDescriptionConstPtr> &simConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const simConfigStatics *simConfig::__get_statics__()
  {
    const static simConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = simConfigStatics::get_instance();

    return statics;
  }

//#line 19 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_EnterSchool = "EnterSchool";
//#line 20 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Query = "Query";
//#line 22 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Happy = "Happy";
//#line 23 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Sad = "Sad";
//#line 24 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Angry = "Angry";
//#line 25 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Boring = "Boring";
//#line 27 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Teacher = "Teacher";
//#line 28 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Student = "Student";
//#line 29 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Parent = "Parent";
//#line 33 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Teacher_Li = "Teacher_Li";
//#line 34 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Hong = "Hong";
//#line 35 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Ming = "Ming";
//#line 36 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Gang = "Gang";
//#line 37 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Dad_of_Hong = "Dad_of_Hong";
//#line 38 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Dad_of_Ming = "Dad_of_Ming";
//#line 39 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Dad_of_Gang = "Dad_of_Gang";
//#line 40 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Headmaster = "Headmaster";
//#line 43 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Greet = "Greet";
//#line 44 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_MeasureTempareture = "MeasureTempareture";
//#line 45 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Answer = "Answer";
//#line 46 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_ParentIdentity = "ParentIdentity";
//#line 47 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Wander = "Wander";
//#line 48 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Doubt  = "Doubt";
//#line 49 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Chat = "Chat";
//#line 50 "/home/zhjd/catkin_ws/src/interface_sim/include/cfg.cfg"
      const char * const sim_Charge = "Charge";
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __SIMRECONFIGURATOR_H__
